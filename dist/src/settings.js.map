{"version":3,"sources":["settings.js"],"names":["ROLE_BUTTON","ROLE_IMAGE","window","editorSDK","token","App","props","state","isCelsius","initialState","undefined","city","time","country","applicationId","data","compRef","componentRef","controllerRef","controllerConfig","Object","assign","margin","marginBottom","event","target","value","document","components","update","settings","JSON","stringify","api","setControllerConfig","setState","parseInt","Component","propTypes","toggle","func","isRequired","enableApp","getAllComponents","buttons","images","getType","type","push","map","controllers","connect","connectToRef","role","disableApp","listConnectedComponents","connectedComponents","disconnect","panel","onEvent","eventType","eventPayload","initialData","editor","getAppAPI","appAPI","render","getElementById"],"mappings":"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","file":"settings.js","sourcesContent":["import 'babel-polyfill';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {Button, ButtonGroup,FormControl,ButtonToolbar,ToggleButtonGroup,ToggleButton} from 'react-bootstrap'\nconst ROLE_BUTTON = 'button';\nconst ROLE_IMAGE = 'image';\n\nconst {editorSDK,token} = window;\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            isCelsius: this.props.initialState.isCelsius!==undefined?this.props.initialState.isCelsius: true,\n            city: this.props.initialState.city!==undefined?this.props.initialState.city:\"Tel Aviv\",\n            time: this.props.initialState.time!==undefined?this.props.initialState.time:60,\n            country: this.props.initialState.country!==undefined?this.props.initialState.country:\"IL\",\n        }\n    }\n\n    static propTypes = {\n        toggle: PropTypes.func.isRequired\n    };\n\n\n    render() {\n        let applicationId=this.props.data.applicationId;\n        let compRef=this.props.data.componentRef;\n        let controllerRef=this.props.data.controllerRef;\n        let controllerConfig=Object.assign({},this.state);\n        return (\n            <div>\n                <div style={{margin:10}}>\n                    <h4 style={{marginBottom:10}}>city:</h4>\n                    <FormControl type='text' placeholder='enter city' value={this.state.city} onChange={(event)=>{\n                        controllerConfig.city=event.target.value;\n                        editorSDK.document.components.data.update(applicationId, {\n                            componentRef: controllerRef,\n                            data: {\n                                settings: JSON.stringify(Object.assign({}, controllerConfig))\n                            }\n                        })\n                        this.props.api.setControllerConfig(controllerConfig);\n                        this.setState({city:event.target.value})}}/>\n                </div>\n                <div style={{margin:10}}>\n                    <h4 style={{marginBottom:10}}>country:</h4>\n                    <FormControl type='text' placeholder='enter country' value={this.state.country} onChange={(event)=>{\n                        controllerConfig.country=event.target.value;\n                        editorSDK.document.components.data.update(applicationId, {\n                            componentRef: controllerRef,\n                            data: {\n                                settings: JSON.stringify(Object.assign({}, controllerConfig))\n                            }\n                        })\n                        this.props.api.setControllerConfig(controllerConfig);\n                        this.setState({country:event.target.value})}}/>\n                </div>\n                <div style={{margin:10}}>\n                    <h4 style={{marginBottom:10}}>degree:</h4>\n                    <ButtonToolbar>\n                        <ToggleButtonGroup type=\"radio\" name=\"degree\" defaultValue={this.state.isCelsius===true? 1:2}>\n                            <ToggleButton bsStyle='primary' value={1} onClick={()=>{\n                                controllerConfig.isCelsius=true;\n                                editorSDK.document.components.data.update(applicationId, {\n                                    componentRef: controllerRef,\n                                    data: {\n                                        settings: JSON.stringify(Object.assign({}, controllerConfig))\n                                    }\n                                })\n                                this.props.api.setControllerConfig(controllerConfig);\n                                this.setState({isCelsius:true})}}>Celsius</ToggleButton>\n                            <ToggleButton bsStyle='primary' value={2} onClick={()=>{\n                                controllerConfig.isCelsius=false;\n                                editorSDK.document.components.data.update(applicationId, {\n                                    componentRef: controllerRef,\n                                    data: {\n                                        settings: JSON.stringify(Object.assign({}, controllerConfig))\n                                    }\n                                })\n                                this.props.api.setControllerConfig(controllerConfig);\n                                this.setState({isCelsius:false})}}>Fahrenheit</ToggleButton>\n                        </ToggleButtonGroup>\n                    </ButtonToolbar>\n                </div>\n                <div style={{margin:10}}>\n                    <h4>time:</h4>\n                    <FormControl type='number' placeholder='enter time in sec' value={this.state.time} onChange={(event)=>{\n                        controllerConfig.time=parseInt(event.target.value);\n                        editorSDK.document.components.data.update(applicationId, {\n                            componentRef: controllerRef,\n                            data: {\n                                settings: JSON.stringify(Object.assign({}, controllerConfig))\n                            }\n                        })\n                        this.props.api.setControllerConfig(controllerConfig);\n                        this.setState({time:parseInt(event.target.value)})}}/>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n\nconst enableApp = async ({token, editorSDK, controllerRef}) => {\n    const components = await editorSDK.components.getAllComponents(token);\n    const buttons = [];\n    const images = [];\n\n    for (const componentRef of components) {\n        const type = await editorSDK.components.getType(token, {componentRef});\n        if (type === 'wysiwyg.viewer.components.SiteButton') {\n            buttons.push(componentRef);\n        }\n        if (type === 'wysiwyg.viewer.components.WPhoto') {\n            images.push(componentRef);\n        }\n    }\n\n    buttons.map(componentRef =>\n        editorSDK.controllers.connect(token, {\n            controllerRef,\n            connectToRef: componentRef,\n            role: ROLE_BUTTON\n        })\n    );\n\n    images.map(componentRef =>\n        editorSDK.controllers.connect(token, {\n            controllerRef,\n            connectToRef: componentRef,\n            role: ROLE_IMAGE\n        })\n    );\n\n};\n\nconst disableApp = async ({token, editorSDK, controllerRef}) => {\n    const connectedComponents = await editorSDK.controllers.listConnectedComponents(token, {controllerRef});\n    connectedComponents.map(componentRef =>\n        editorSDK.controllers.disconnect(token, {\n            controllerRef,\n            connectToRef: componentRef,\n            role: null\n        })\n    );\n};\n\n\neditorSDK.panel.onEvent(async ({eventType, eventPayload}) => {\n    if (eventType === 'startConfiguration') {\n       let initialState =Object.assign({},eventPayload.initialData.controllerConfig)\n        const appAPI = await editorSDK.editor.getAppAPI();\n        ReactDOM.render(\n            <App initialState={initialState}\n                 data={eventPayload.initialData}\n                 api={appAPI}\n            />,\n            document.getElementById('root')\n        );\n    }\n});\n"]}