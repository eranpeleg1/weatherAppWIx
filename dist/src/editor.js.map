{"version":3,"sources":["editor.js"],"names":["editorSDK","appToken","controllerRef","containerRef","componentDefinition","componentType","layout","x","y","width","height","componentClassName","metaData","isHidden","isPreset","schemaVersion","skin","styleType","type","style","properties","bg","rd","shd","brw","brd","propertiesSource","components","add","pageRef","compRef","controllers","connect","connection","document","data","update","componentRef","settings","JSON","stringify","Object","assign","controllerConfig","addContainer","role","text","hNumber","stylesMapId","addText","icon","uri","addImage","label","link","margin","align","bgh","fnt","brdh","addButton","controllerType","_editorSDK","listAllControllers","_token","controller","getData","controllerAlreadyExists","applicationId","city","country","isCelsius","time","setControllerConfig","newConfig","connectToRef","connectionConfig","isPrimary","module","exports","editorReady","token","firstInstall","console","log","info","getAppDefinitionId","pages","getCurrent","date","Date","toDateString","editor","setAppAPI","cityText","dateText","weather_icon","degreeText","descriptionText","fetchButton","onEvent","eventType","eventPayload","options","title","url","initialData","openComponentPanel","getAppManifest","containerManifest","gfpp","desktop","mainAction1","actionId","iconButtons","design","animation","help","customizeDesign","controllersStageData","containerController","default","connections","container_role","tagname","widgetDisplayName","eventHandlers","synthetic","inherits","members","randomize","description","kind"],"mappings":"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","file":"editor.js","sourcesContent":["let _editorSDK;\nlet _token;\nlet compRef;\nlet controllerRef;\nlet applicationId;\nlet controllerConfig={city:'Tel Aviv',country:\"IL\",isCelsius:true,time:60}\n\n\nconst setControllerConfig=(newConfig)=>{\n    controllerConfig=newConfig;\n}\n\nconst connection=(role) => {\n    return {\n        connectToRef: compRef,\n        controllerRef: controllerRef,\n        role: role,\n        connectionConfig: {},\n        isPrimary: true\n    }\n}\n\nasync function addContainer(editorSDK, appToken, controllerRef, containerRef) {\n    const componentDefinition = {\n        componentType: 'mobile.core.components.Container',\n        layout: {\n            x: 310,\n            y: 210,\n            width: 300,\n            height: 300,\n        },\n        'type': 'Container',\n        \"style\": {\n            componentClassName: \"mobile.core.components.Container\",\n            metaData: {\n                isHidden: false,\n                isPreset: false,\n                schemaVersion: \"1.0\"\n            },\n            skin: \"wysiwyg.viewer.skins.area.AppleArea\",\n            styleType: \"custom\",\n            type: \"TopLevelStyle\",\n            style:{\n                properties:{\n                    bg: \"color_18\", rd: \"10px 10px 10px 10px\", shd: \"0 1px 4px rgba(0, 0, 0, 0.6)\", brw: \"1px\",\n                    brd: \"color_15\", brw:\"1px\",rd:\"10px 10px 10px 10px\",shd:\"0 1px 4px rgba(0, 0, 0, 0.6)\"\n                },\n                propertiesSource:{\n                    bg: \"theme\", rd: \"value\", shd: \"value\", brw: \"value\", brd: \"theme\",shd: \"value\"\n                }\n            }\n        }\n    }\n\n    compRef = await editorSDK.components.add(appToken, {componentDefinition, pageRef: containerRef})\n    editorSDK.controllers.connect(appToken,connection('container_role'));\n    editorSDK.document.components.data.update(appToken, {\n        componentRef: controllerRef,\n        data: {\n            settings: JSON.stringify(Object.assign({}, controllerConfig))\n        }\n    })\n    return compRef;\n\n}\n\nasync function addText(editorSDK, appToken, controllerRef,containerRef,role,x,y,text,hNumber) {\n    const componentDefinition = {\n        componentType: 'wysiwyg.viewer.components.WRichText',\n        layout: {\n            x: x,\n            y: y,\n            width: 300,\n            height: 300,\n\n        },\n        data:{\n            type: \"StyledText\",\n            text: `<h${hNumber} class=\"font_${hNumber}\" style=\"color:#FFFFFF\">${text}</h${hNumber}>`,\n            stylesMapId: \"CK_EDITOR_PARAGRAPH_STYLES\"\n\n        },\n        'type': 'Component',\n        'props': {\n            type: 'WRichTextProperties'\n        },\n        'style': 'txtNew',\n    }\n\n    compRef = await editorSDK.components.add(appToken, {componentDefinition, pageRef: containerRef})\n    editorSDK.controllers.connect(appToken,connection(role));\n    return compRef;\n}\n\nasync function addImage(editorSDK, appToken, controllerRef,containerRef,role,x,y,icon) {\n    const componentDefinition = {\n        componentType: 'wysiwyg.viewer.components.WPhoto',\n        layout: {\n            x: x,\n            y: y,\n            width: 170,\n            height: 170,\n\n\n        },\n        data:{\n            type: \"Image\",\n            metaData:{isPreset: false, schemaVersion: \"1.0\", isHidden: false},\n            uri:'https://openweathermap.org/img/w/'+icon+'.png',\n            stylesMapId: \"CK_EDITOR_PARAGRAPH_STYLES\"\n\n        },\n        'type': 'Component',\n        'props': {\n            type: 'WPhotoProperties',\n        },\n        'style': 'wp2',\n    }\n\n    compRef = await editorSDK.components.add(appToken, {componentDefinition, pageRef: containerRef})\n    editorSDK.controllers.connect(appToken,connection(role));\n    return compRef;\n}\n\nasync function addButton(editorSDK, appToken, controllerRef,containerRef,role,x,y,icon) {\n    const componentDefinition = {\n        componentType: 'wysiwyg.viewer.components.SiteButton',\n        layout: {\n            x: x,\n            y: y,\n            width: 128,\n            height: 40,\n        },\n        data:{\n            label:\"fetch weather\",\n            link:\"\",\n            metaData:{isPreset: false, schemaVersion: \"1.0\", isHidden: false},\n            type:\"LinkableButton\"\n        },\n        'type': 'Component',\n        'props': {\n            margin:0,\n            align:'center',\n             metaData:  {isPreset: false, schemaVersion: \"1.0\", isHidden: false},\n            type: 'ButtonProperties',\n        },\n        style:{\n            metaData:  {isPreset: false, schemaVersion: \"1.0\", isHidden: false},\n            skin:'wysiwyg.viewer.skins.button.BasicButton',\n            componentClassName:'wysiwyg.viewer.components.SiteButton',\n            style:{\n                properties:{'alpha-bg':\"1\", 'alpha-bgh':\"1\",'alpha-brd':\"1\",'alpha-brdh': \"1\",\n                    bg: \"#566FB8\",bgh:'#3E569E' ,rd: \"20px\", shd: \"0.00px 3.00px 0px 0px rgba(86,111,184,0.6)\", brw: \"0px\",\n                    fnt: \"normal normal normal 14px/1.4em clarendon-w01-medium-692107\",\n                    brd:\"#2B689C\", brdh: \"#536EB7\",rd:\"10px 10px 10px 10px\",shd:\"0 1px 4px rgba(0, 0, 0, 0.6)\",'boxShadowToggleOn-shd':\"true\"\n                    ,txt:'#FFFFFF',txth:'#FFFFFF'\n                },\n                propertiesSource:{\n                    'alpha-bg':'value', 'alpha-bgh':'value','alpha-brd':'value','alpha-brdh': 'value',\n                    bg: 'value',bgh:'value' ,rd: 'value', shd:'value', brw: 'value', fnt:'value',\n                    brd:'value', brdh:'value',rd:'value',shd:'value','boxShadowToggleOn-shd':'value',txt:'value',txth:'value'\n                }\n            },\n            styleType: \"custom\",\n            type: \"TopLevelStyle\",\n        }\n\n    }\n\n    compRef = await editorSDK.components.add(appToken, {componentDefinition, pageRef: containerRef})\n    editorSDK.controllers.connect(appToken,connection(role));\n    return compRef;\n}\n\n\nmodule.exports = {\n\n    editorReady: async (editorSDK, token, {firstInstall}) => {\n        _editorSDK = editorSDK;\n        _token = token;\n        if (firstInstall || !await controllerAlreadyExists('containerController')) {\n            console.log('Creating missing controller!');\n            applicationId = await editorSDK.info.getAppDefinitionId(token);\n            const pageRef = await editorSDK.document.pages.getCurrent(token);\n            controllerRef= await editorSDK.components.add(token, {\n                componentDefinition: {\n                    componentType: 'platform.components.AppController',\n                    data: {\n                        type: 'AppController',\n                        controllerType: 'containerController',\n                        applicationId,\n                        settings: JSON.stringify(Object.assign({}, controllerConfig))\n                    }\n                },\n                pageRef\n            });\n            let date=new Date();\n            date=date.toDateString();\n            await editorSDK.editor.setAppAPI(applicationId,{setControllerConfig});\n            const containerRef = await addContainer(editorSDK, applicationId, controllerRef, pageRef)\n            const cityText = await addText(editorSDK, applicationId, controllerRef,containerRef,'city_role',10,10,controllerConfig.city+\", \"+controllerConfig.country,4);\n            const dateText = await addText(editorSDK, applicationId, controllerRef,containerRef,'date_role',10,48,date,5);\n            const weather_icon = await addImage(editorSDK, applicationId, controllerRef,containerRef,'icon_role',-7,55,'01d');\n            const degreeText = await addText(editorSDK, applicationId, controllerRef,containerRef,'degree_role',10,195,controllerConfig.isCelsius? \"C\":\"F\",4);\n            const descriptionText = await addText(editorSDK, applicationId, controllerRef,containerRef,'description_role',10,238,'Fair',5);\n            const fetchButton = await addButton(editorSDK, applicationId, controllerRef,containerRef,'button_role',163,196);\n\n        }\n    },\n\n    onEvent: async ({eventType, eventPayload}) => {\n        const {componentRef} = eventPayload;\n        if (eventType ==='componentGfppClicked' ) {\n            const options = {\n                title: 'weather-app settings',\n                url: './settings.html',\n                initialData: {\n                    componentRef,\n                    controllerRef,\n                    controllerConfig,\n                    applicationId\n                },\n                width: 400,\n                height: 530,\n            };\n            await _editorSDK.editor.openComponentPanel(_token, {\n                ...options,\n                componentRef: componentRef\n            });\n        }\n    },\n\n    getAppManifest: () => {\n\n        const containerManifest = {\n            gfpp: {\n                desktop: {\n                    mainAction1:{label:'settings', actionId:\"SETTINGS\"},\n                    iconButtons: {\n                        layout:'HIDE',\n                        design: 'HIDE',\n                        animation: 'HIDE',\n                        help: 'HIDE',\n                        customizeDesign: 'HIDE',\n                    },\n                }\n            }};\n\n        return {\n            controllersStageData: {\n                containerController: {\n                    default: {\n                        connections: {\n                            container_role: containerManifest\n                        },\n\n                    }\n                }\n            },\n            exports: {\n                containerController: {\n                    tagname: 'containerController',\n                    widgetDisplayName: '',\n                    eventHandlers: {},\n                    synthetic: false,\n                    inherits: {},\n                    members: {\n                        randomize: {\n                            description: 'Randomize image sources',\n                            kind: 'function'\n                        }\n                    }\n                }\n            }\n        };\n    }\n\n};\n\nasync function controllerAlreadyExists(controllerType) {\n    const controllers = await _editorSDK.controllers.listAllControllers(_token);\n    for (const controller of controllers) {\n        const data = await _editorSDK.controllers.getData(_token, controller);\n        if (data.controllerType === controllerType) {\n            return true;\n        }\n    }\n    return false;\n}\n"]}